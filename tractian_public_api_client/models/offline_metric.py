from typing import Literal, cast

OfflineMetric = Literal[
    "amount",
    "bar",
    "celsius",
    "centimeters",
    "chi",
    "col",
    "consumption",
    "cubicmeters",
    "cubicMetersPerHour",
    "current",
    "cycles",
    "decibel",
    "dollar",
    "fahrenheit",
    "feet",
    "gallons",
    "gallonsPerMinute",
    "gauss",
    "gigawattHour",
    "grams",
    "guarani",
    "hertz",
    "hourmeter",
    "hours",
    "hundred",
    "inches",
    "inchesPerSecond",
    "inchOfWaterColumn",
    "insightEconomy",
    "kelvin",
    "kilogram-force",
    "kilograms",
    "kilometers",
    "kilowatts",
    "kilowattsHour",
    "kPa",
    "liters",
    "litersPerMinute",
    "megawatt",
    "megawattHour",
    "meters",
    "metersOfWaterColumn",
    "micras",
    "microSiemensPerCentimeter",
    "miles",
    "miligramsPerLiter",
    "milliBar",
    "milliliters",
    "millilitersPerLiter",
    "millimeters",
    "millimetersOfWaterColumn",
    "millivolts",
    "minutes",
    "MPa",
    "newtonMeter",
    "ntu",
    "oxygenMiligramPerLiter",
    "pairs",
    "pascal",
    "percentage",
    "peso_ars",
    "peso_mxn",
    "ph",
    "pieces",
    "power",
    "ppm",
    "psi",
    "real",
    "resistance",
    "rmsAccel",
    "rmsSpeed",
    "rpm",
    "seconds",
    "service",
    "sol",
    "squareMeters",
    "tesla",
    "ton",
    "voltage",
    "volume",
]

OFFLINE_METRIC_VALUES: set[OfflineMetric] = {
    "amount",
    "bar",
    "celsius",
    "centimeters",
    "chi",
    "col",
    "consumption",
    "cubicmeters",
    "cubicMetersPerHour",
    "current",
    "cycles",
    "decibel",
    "dollar",
    "fahrenheit",
    "feet",
    "gallons",
    "gallonsPerMinute",
    "gauss",
    "gigawattHour",
    "grams",
    "guarani",
    "hertz",
    "hourmeter",
    "hours",
    "hundred",
    "inches",
    "inchesPerSecond",
    "inchOfWaterColumn",
    "insightEconomy",
    "kelvin",
    "kilogram-force",
    "kilograms",
    "kilometers",
    "kilowatts",
    "kilowattsHour",
    "kPa",
    "liters",
    "litersPerMinute",
    "megawatt",
    "megawattHour",
    "meters",
    "metersOfWaterColumn",
    "micras",
    "microSiemensPerCentimeter",
    "miles",
    "miligramsPerLiter",
    "milliBar",
    "milliliters",
    "millilitersPerLiter",
    "millimeters",
    "millimetersOfWaterColumn",
    "millivolts",
    "minutes",
    "MPa",
    "newtonMeter",
    "ntu",
    "oxygenMiligramPerLiter",
    "pairs",
    "pascal",
    "percentage",
    "peso_ars",
    "peso_mxn",
    "ph",
    "pieces",
    "power",
    "ppm",
    "psi",
    "real",
    "resistance",
    "rmsAccel",
    "rmsSpeed",
    "rpm",
    "seconds",
    "service",
    "sol",
    "squareMeters",
    "tesla",
    "ton",
    "voltage",
    "volume",
}


def check_offline_metric(value: str) -> OfflineMetric:
    if value in OFFLINE_METRIC_VALUES:
        return cast(OfflineMetric, value)
    raise TypeError(
        f"Unexpected value {value!r}. Expected one of {OFFLINE_METRIC_VALUES!r}"
    )
